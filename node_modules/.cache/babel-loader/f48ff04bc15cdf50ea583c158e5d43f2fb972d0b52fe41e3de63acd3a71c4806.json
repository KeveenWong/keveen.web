{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kevin\\\\keveen.web\\\\src\\\\components\\\\MenuSelectionScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport '../assets/pokemon-gameboy-font.css';\nimport selectMenu from '../assets/menu_select.png';\nimport arrowIndicator from '../assets/select_arrow.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MenuSelectionScreen = () => {\n  _s();\n  const [menuVisible, setMenuVisible] = useState(false);\n  const [highlightedIndex, setHighlightedIndex] = useState(0);\n  const [prevFocusIndex, setPrevFocusIndex] = useState(0);\n  const menuOptionsRef = useRef([]);\n  const menuOptions = ['HOME', 'ABOUT', 'PROJECTS'];\n  //   const mobileMediaQuery = '@media (max-width: 300px)';\n\n  // Function to handle the \"x\" key press\n  const handleKeyPress = event => {\n    if (event.key === 'x') {\n      if (!menuVisible) {\n        // Save the current focus index when the menu opens\n        setPrevFocusIndex(highlightedIndex);\n        // Focus on the menu when it opens\n        setHighlightedIndex(0);\n        setMenuVisible(true);\n      } else {\n        // Restore the focus to the previously focused index when the menu closes\n        setHighlightedIndex(prevFocusIndex);\n        setMenuVisible(false);\n        // Return focus to the previously focused element\n        menuOptionsRef.current[prevFocusIndex].focus();\n      }\n    } else if (menuVisible && event.key === 'ArrowUp') {\n      // Handle arrow up key press for menu navigation\n      setHighlightedIndex(prevIndex => prevIndex === 0 ? menuOptions.length - 1 : prevIndex - 1);\n    } else if (menuVisible && event.key === 'ArrowDown') {\n      // Handle arrow down key press for menu navigation\n      setHighlightedIndex(prevIndex => prevIndex === menuOptions.length - 1 ? 0 : prevIndex + 1);\n    }\n  };\n\n  // Add an event listener for the \"x\" key press and arrow key presses when the component mounts\n  useEffect(() => {\n    document.addEventListener('keydown', handleKeyPress);\n    // Remove the event listener when the component unmounts\n    return () => {\n      document.removeEventListener('keydown', handleKeyPress);\n    };\n  }, [menuVisible]); // Include menuVisible as a dependency to ensure the effect is updated when the menu opens/closes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'absolute',\n      top: '20px',\n      right: '20px',\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'flex-end',\n      zIndex: 9999 // Adjust overlay\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: '#000',\n        color: '#fff',\n        width: '30px',\n        height: '30px',\n        borderRadius: '4px',\n        cursor: 'pointer'\n      },\n      onClick: () => setMenuVisible(prevState => !prevState),\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-bars\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), menuVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: selectMenu,\n        alt: \"Menu Selection Screen\",\n        style: {\n          width: '70%'\n          //   // Adjust the mobile styles for the menu selection screen image\n          //   [mobileMediaQuery]: {\n          //     top: '10%', // Adjust the top position for mobile\n          //     left: '5%', // Adjust the left position for mobile\n          //     width: '90%', // Adjust the width for mobile\n          //   },\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: arrowIndicator,\n        alt: \"Arrow Indicator\",\n        style: {\n          position: 'absolute',\n          top: `${110 + highlightedIndex * 100}px`,\n          left: '60px',\n          width: '30px',\n          height: 'auto',\n          [mobileMediaQuery]: {\n            top: `${10 + highlightedIndex * 50}px`,\n            // Adjust the top position for mobile\n            left: '10%',\n            // Adjust the left position for mobile\n            width: '20px' // Adjust the width for mobile\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), menuOptions.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pokemon-gameboy-font\",\n        style: {\n          position: 'absolute',\n          top: `${100 + index * 100}px`,\n          left: '110px',\n          color: '#000',\n          fontSize: '48px',\n          cursor: 'pointer',\n          [mobileMediaQuery]: {\n            top: `${10 + index * 50}px`,\n            // Adjust the top position for mobile\n            left: '30%',\n            // Adjust the left position for mobile\n            fontSize: '32px' // Adjust the font size for mobile\n          }\n        },\n\n        onClick: () => {\n          // TO ADD PAGE ROUTES !!!\n          console.log('Navigate to', option);\n          setMenuVisible(false); // Close the menu after selecting a menu item\n        },\n\n        ref: el => menuOptionsRef.current[index] = el,\n        tabIndex: index,\n        children: option\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(MenuSelectionScreen, \"8T8ixVFeZQZkfmd69qLXTGM0acw=\");\n_c = MenuSelectionScreen;\nexport default MenuSelectionScreen;\nvar _c;\n$RefreshReg$(_c, \"MenuSelectionScreen\");","map":{"version":3,"names":["React","useState","useEffect","useRef","selectMenu","arrowIndicator","jsxDEV","_jsxDEV","MenuSelectionScreen","_s","menuVisible","setMenuVisible","highlightedIndex","setHighlightedIndex","prevFocusIndex","setPrevFocusIndex","menuOptionsRef","menuOptions","handleKeyPress","event","key","current","focus","prevIndex","length","document","addEventListener","removeEventListener","style","position","top","right","display","flexDirection","alignItems","zIndex","children","justifyContent","backgroundColor","color","width","height","borderRadius","cursor","onClick","prevState","className","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","left","mobileMediaQuery","map","option","index","fontSize","console","log","ref","el","tabIndex","_c","$RefreshReg$"],"sources":["C:/Users/Kevin/keveen.web/src/components/MenuSelectionScreen.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport '../assets/pokemon-gameboy-font.css'; \r\nimport selectMenu from '../assets/menu_select.png';\r\nimport arrowIndicator from '../assets/select_arrow.png'\r\n\r\nconst MenuSelectionScreen = () => {\r\n  const [menuVisible, setMenuVisible] = useState(false);\r\n  const [highlightedIndex, setHighlightedIndex] = useState(0);\r\n  const [prevFocusIndex, setPrevFocusIndex] = useState(0);\r\n  const menuOptionsRef = useRef([]);\r\n  const menuOptions = ['HOME', 'ABOUT', 'PROJECTS'];\r\n//   const mobileMediaQuery = '@media (max-width: 300px)';\r\n\r\n  // Function to handle the \"x\" key press\r\n  const handleKeyPress = (event) => {\r\n    if (event.key === 'x') {\r\n      if (!menuVisible) {\r\n        // Save the current focus index when the menu opens\r\n        setPrevFocusIndex(highlightedIndex);\r\n        // Focus on the menu when it opens\r\n        setHighlightedIndex(0);\r\n        setMenuVisible(true);\r\n      } else {\r\n        // Restore the focus to the previously focused index when the menu closes\r\n        setHighlightedIndex(prevFocusIndex);\r\n        setMenuVisible(false);\r\n        // Return focus to the previously focused element\r\n        menuOptionsRef.current[prevFocusIndex].focus();\r\n      }\r\n    } else if (menuVisible && event.key === 'ArrowUp') {\r\n      // Handle arrow up key press for menu navigation\r\n      setHighlightedIndex((prevIndex) => (prevIndex === 0 ? menuOptions.length - 1 : prevIndex - 1));\r\n    } else if (menuVisible && event.key === 'ArrowDown') {\r\n      // Handle arrow down key press for menu navigation\r\n      setHighlightedIndex((prevIndex) => (prevIndex === menuOptions.length - 1 ? 0 : prevIndex + 1));\r\n    }\r\n  };\r\n\r\n  // Add an event listener for the \"x\" key press and arrow key presses when the component mounts\r\n  useEffect(() => {\r\n    document.addEventListener('keydown', handleKeyPress);\r\n    // Remove the event listener when the component unmounts\r\n    return () => {\r\n      document.removeEventListener('keydown', handleKeyPress);\r\n    };\r\n  }, [menuVisible]); // Include menuVisible as a dependency to ensure the effect is updated when the menu opens/closes\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        position: 'absolute',\r\n        top: '20px', \r\n        right: '20px', \r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-end',\r\n        zIndex: 9999, // Adjust overlay\r\n      }}\r\n    >\r\n      {/* Hamburger icon to open the menu */}\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          backgroundColor: '#000',\r\n          color: '#fff',\r\n          width: '30px',\r\n          height: '30px',\r\n          borderRadius: '4px',\r\n          cursor: 'pointer',\r\n        }}\r\n        onClick={() => setMenuVisible((prevState) => !prevState)}\r\n      >\r\n        <i className=\"fas fa-bars\"></i>\r\n      </div>\r\n\r\n      {/* Menu selection screen */}\r\n      {menuVisible && (\r\n        <div\r\n          style={{\r\n            position: 'relative',\r\n          }}\r\n        >\r\n          <img\r\n            src={selectMenu}\r\n            alt=\"Menu Selection Screen\"\r\n            style={{\r\n                width: '70%'\r\n            //   // Adjust the mobile styles for the menu selection screen image\r\n            //   [mobileMediaQuery]: {\r\n            //     top: '10%', // Adjust the top position for mobile\r\n            //     left: '5%', // Adjust the left position for mobile\r\n            //     width: '90%', // Adjust the width for mobile\r\n            //   },\r\n            }}\r\n          />\r\n\r\n          {/* Highlighted menu item arrow indicator */}\r\n          <img\r\n            src={arrowIndicator}\r\n            alt=\"Arrow Indicator\"\r\n            style={{\r\n              position: 'absolute',\r\n              top: `${110 + highlightedIndex * 100}px`,\r\n              left: '60px',\r\n              width: '30px',\r\n              height: 'auto',\r\n              [mobileMediaQuery]: {\r\n                top: `${10 + highlightedIndex * 50}px`, // Adjust the top position for mobile\r\n                left: '10%', // Adjust the left position for mobile\r\n                width: '20px', // Adjust the width for mobile\r\n              },\r\n            }}\r\n          />\r\n\r\n          {/* Menu options */}\r\n          {menuOptions.map((option, index) => (\r\n            <div\r\n              key={index}\r\n              className=\"pokemon-gameboy-font\"\r\n              style={{\r\n                position: 'absolute',\r\n                top: `${100 + index * 100}px`,\r\n                left: '110px',\r\n                color: '#000',\r\n                fontSize: '48px',\r\n                cursor: 'pointer',\r\n                [mobileMediaQuery]: {\r\n                  top: `${10 + index * 50}px`, // Adjust the top position for mobile\r\n                  left: '30%', // Adjust the left position for mobile\r\n                  fontSize: '32px', // Adjust the font size for mobile\r\n                },\r\n              }}\r\n              onClick={() => {\r\n                // TO ADD PAGE ROUTES !!!\r\n                console.log('Navigate to', option);\r\n                setMenuVisible(false); // Close the menu after selecting a menu item\r\n              }}\r\n              ref={(el) => (menuOptionsRef.current[index] = el)}\r\n              tabIndex={index}\r\n            >\r\n              {option}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MenuSelectionScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}